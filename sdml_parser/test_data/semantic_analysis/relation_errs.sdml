config db {
    provider = "foundationDB"
}

model User {
    id                            ShortStr     @id @default(auto())
    email                         ShortStr     @unique
    emailErrReferencedFieldNotScalar SupportEmail
    name                          ShortStr?     
    nickNames                     ShortStr[]
    role                          Role         @default(USER)
    profile                       Profile?     @relation(name: "UserOnProfile")
    profile1                      Profile?     @relation(name: "UserOnProfile1")
    posts                         Post[]       @relation(name: "UserOnPost")
    posts1ErrDuplicateRelation    Post[]       @relation(name: "UserOnPost")
    mentorErrPartialRelation      User?        @relation(name: "UsersMentor", field: mentorEmail, references: email)
    mentorEmail                   ShortStr?    
    spouse                        User?        @relation(name: "UsersSpouse", field: spouseUserId, references: id)
    spouseUserId                  ShortStr?   @unique
}

model Profile {
    id                                    ShortStr      @id @default(auto())
    bio                                   LongStr?
    user                                  User          @relation(name: "UserOnProfile1", field: userEmail, references: emailsErrReferencedFieldNotScalar)
    userErrRelationAttributeMissing       User
    userEmail                             ShortStr      @unique 
}

model Post {
    id                              DateTime    @id @default(auto())
    createdAt                       DateTime    @default(now())
    updatedAt                       DateTime
    title                           ShortStr
    published                       Boolean     @default(false)
    author                          User        @relation(name: "UserOnPost", field: authorId, references: id)
    author1ErrDuplicateRelation     User        @relation(name: "UserOnPost", field: authorId, references: id)
    authorId                        ShortStr         
    categoryIdsErrScalarFieldNotPrimitive       Role[]
    category                        Category[]  @relation(field: categoryIds, references: id)

}

model Category {
    idErrReferencedFieldNotFound      ShortStr      @id @default(auto())
    name                              ShortStr
    postIDsErrScalarFieldNotFound     ShortStr[] 
    posts                             Post[]        @relation(nameErrInvalidAttributeArg: "CategoriesOnPost", field: postIDs, references: id)
}

enum Role {
    USER
    ADMIN
}

enum SupportEmail {
    USER_EMAIL
    SUPPORT_EMAIL
}